# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    ArtifactName: 'PublishBuildArtifacts'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Get-ChildItem -Path $(Build.SourcesDirectory)
- task: CopyFiles@2
  displayName: 'Copy deployment file to bastion server'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'flask-app-deployment.yaml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'bastion-server'
    sourceFolder: $(Build.ArtifactStagingDirectory)' 
    contents: 'flask-app-deployment.yaml' 
    targetFolder: '/home/azureuser/flask-demo-app' 
#- task: SSH@0
#  displayName: 'Copy deployment file to bastion server'
#  inputs:
#    sshEndpoint: 'bastion-server'
#    runOptions: 'commands'
#    commands: |
#      scp $(Build.ArtifactStagingDirectory)/deployment/flask-app-deployment.yaml azureuser@ccp-pulse-dev-bastion.canadacentral.cloudapp.azure.com:/home/azureuser/flask-demo-app/flask-app-deployment.yaml

- task: KubernetesManifest@0
  displayName: 'Apply K8s deployment'
  inputs:
    connectionType: 'None'
    command: 'apply'
    arguments: '-f /home/azureuser/flask-demo-app/flask-app-deployment.yaml'
    secrets: 'isuru-rathnayake'
